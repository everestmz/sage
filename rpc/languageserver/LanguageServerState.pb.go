// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.2
// source: rpc/languageserver/LanguageServerState.proto

package languageserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TextDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri            string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	LanguageId     string                 `protobuf:"bytes,2,opt,name=language_id,json=languageId,proto3" json:"language_id,omitempty"`
	Version        int32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Text           string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	LastEdit       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_edit,json=lastEdit,proto3" json:"last_edit,omitempty"`
	LastEditedLine int32                  `protobuf:"varint,6,opt,name=last_edited_line,json=lastEditedLine,proto3" json:"last_edited_line,omitempty"`
}

func (x *TextDocument) Reset() {
	*x = TextDocument{}
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextDocument) ProtoMessage() {}

func (x *TextDocument) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextDocument.ProtoReflect.Descriptor instead.
func (*TextDocument) Descriptor() ([]byte, []int) {
	return file_rpc_languageserver_LanguageServerState_proto_rawDescGZIP(), []int{0}
}

func (x *TextDocument) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *TextDocument) GetLanguageId() string {
	if x != nil {
		return x.LanguageId
	}
	return ""
}

func (x *TextDocument) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TextDocument) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextDocument) GetLastEdit() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEdit
	}
	return nil
}

func (x *TextDocument) GetLastEditedLine() int32 {
	if x != nil {
		return x.LastEditedLine
	}
	return 0
}

type GetOpenDocumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOpenDocumentsRequest) Reset() {
	*x = GetOpenDocumentsRequest{}
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenDocumentsRequest) ProtoMessage() {}

func (x *GetOpenDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenDocumentsRequest.ProtoReflect.Descriptor instead.
func (*GetOpenDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_languageserver_LanguageServerState_proto_rawDescGZIP(), []int{1}
}

type GetOpenDocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents map[string]*TextDocument `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetOpenDocumentsResponse) Reset() {
	*x = GetOpenDocumentsResponse{}
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOpenDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenDocumentsResponse) ProtoMessage() {}

func (x *GetOpenDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_languageserver_LanguageServerState_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenDocumentsResponse.ProtoReflect.Descriptor instead.
func (*GetOpenDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_languageserver_LanguageServerState_proto_rawDescGZIP(), []int{2}
}

func (x *GetOpenDocumentsResponse) GetDocuments() map[string]*TextDocument {
	if x != nil {
		return x.Documents
	}
	return nil
}

var File_rpc_languageserver_LanguageServerState_proto protoreflect.FileDescriptor

var file_rpc_languageserver_LanguageServerState_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x72, 0x70, 0x63, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd2, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xcd, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x09,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x5a, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32,
	0x7e, 0x0a, 0x13, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65,
	0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x76,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x6d, 0x7a, 0x2f, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_languageserver_LanguageServerState_proto_rawDescOnce sync.Once
	file_rpc_languageserver_LanguageServerState_proto_rawDescData = file_rpc_languageserver_LanguageServerState_proto_rawDesc
)

func file_rpc_languageserver_LanguageServerState_proto_rawDescGZIP() []byte {
	file_rpc_languageserver_LanguageServerState_proto_rawDescOnce.Do(func() {
		file_rpc_languageserver_LanguageServerState_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_languageserver_LanguageServerState_proto_rawDescData)
	})
	return file_rpc_languageserver_LanguageServerState_proto_rawDescData
}

var file_rpc_languageserver_LanguageServerState_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_languageserver_LanguageServerState_proto_goTypes = []any{
	(*TextDocument)(nil),             // 0: languageserver.TextDocument
	(*GetOpenDocumentsRequest)(nil),  // 1: languageserver.GetOpenDocumentsRequest
	(*GetOpenDocumentsResponse)(nil), // 2: languageserver.GetOpenDocumentsResponse
	nil,                              // 3: languageserver.GetOpenDocumentsResponse.DocumentsEntry
	(*timestamppb.Timestamp)(nil),    // 4: google.protobuf.Timestamp
}
var file_rpc_languageserver_LanguageServerState_proto_depIdxs = []int32{
	4, // 0: languageserver.TextDocument.last_edit:type_name -> google.protobuf.Timestamp
	3, // 1: languageserver.GetOpenDocumentsResponse.documents:type_name -> languageserver.GetOpenDocumentsResponse.DocumentsEntry
	0, // 2: languageserver.GetOpenDocumentsResponse.DocumentsEntry.value:type_name -> languageserver.TextDocument
	1, // 3: languageserver.LanguageServerState.GetOpenDocuments:input_type -> languageserver.GetOpenDocumentsRequest
	2, // 4: languageserver.LanguageServerState.GetOpenDocuments:output_type -> languageserver.GetOpenDocumentsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpc_languageserver_LanguageServerState_proto_init() }
func file_rpc_languageserver_LanguageServerState_proto_init() {
	if File_rpc_languageserver_LanguageServerState_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_languageserver_LanguageServerState_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_languageserver_LanguageServerState_proto_goTypes,
		DependencyIndexes: file_rpc_languageserver_LanguageServerState_proto_depIdxs,
		MessageInfos:      file_rpc_languageserver_LanguageServerState_proto_msgTypes,
	}.Build()
	File_rpc_languageserver_LanguageServerState_proto = out.File
	file_rpc_languageserver_LanguageServerState_proto_rawDesc = nil
	file_rpc_languageserver_LanguageServerState_proto_goTypes = nil
	file_rpc_languageserver_LanguageServerState_proto_depIdxs = nil
}
